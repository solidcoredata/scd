// Copyright 2017 The Solid Core Data Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package api;

import "auth.proto";
import "router.proto";

service HTTP {
	rpc ServeHTTP(HTTPRequest) returns (HTTPResponse);
}

message HTTPRequest {
	string Host = 1;
	// Method specifies the HTTP method (GET, POST, PUT, etc.).
	string Method = 2;
	
	// URL specifies either the URI being requested.
	URL URL = 3;
	
	// The protocol version for incoming server requests.
	int32 ProtoMajor = 4;
	int32 ProtoMinor = 5;
	
	KeyValueList Header = 6;
	
	bytes Body = 7;
	
	string ContentType = 8;

	// RemoteAddr allows HTTP servers and other software to record
	// the network address that sent the request, usually for
	// logging. This field is not filled in by ReadRequest and
	// has no defined format. The HTTP server in this package
	// sets RemoteAddr to an "IP:port" address before invoking a
	// handler.
	string RemoteAddr = 9;
	
	TLSState TLS = 10;
	
	RequestAuthResp Auth = 11;
	ConfigureURL Config = 12;
}
message HTTPResponse {
	KeyValueList Header = 1;
	
	// Content type of the body.
	string ContentType = 2;
	
	// Encoding of the response. Often a compression method like "gzip" or "br".
	string Encoding = 3;
	
	bytes Body = 4;
}

message URL {
	string Host = 1;
	string Path = 2;
	KeyValueList Query = 3;
}

message StringList {
	repeated string Value = 1;
}

message KeyValueList {
	map<string, StringList> Values = 1;
}

message TLSState {
	uint32 Version = 1;
	bool HandshakeComplete = 2;
	bool DidResume = 3;
	uint32 CipherSuite = 4;
	string ServerName = 5;
}
