// Copyright 2017 The Solid Core Data Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package api;

import "google/protobuf/empty.proto";
import "auth.proto";

// Routes is served by a non-router service to allow the router know what
// routes it can respond to.
service Routes {
	rpc UpdateServiceBundle(google.protobuf.Empty) returns (stream ServiceBundle);
	
	// Update connected services information, such as other service locations and SPA code and configs.
	rpc UpdateServiceConfig(ServiceConfig) returns (google.protobuf.Empty);
}

// RouterConfiguration 
service RouterConfiguration {
	rpc Notify(NotifyReq) returns (google.protobuf.Empty);
	rpc Update(UpdateReq) returns (UpdateResp);
}

message NotifyReq {
	string ServiceAddress = 1;
}

enum UpdateAction {
	UpdateNOOP = 0;
	UpdateInsert = 1;
	UpdateAlter = 2;
	UpdateDelete = 3;
}

message UpdateReq {
	UpdateAction Action = 1;
	string Bind = 2;
	repeated string Host = 3;
	repeated string Bundle = 4;
}

message UpdateResp {}

message ServiceConfigEndpoint {
	string Name = 1;
	string Endpoint = 2;
	repeated Resource Resource = 3;
}

enum ServiceConfigAction {
	Add = 0;
	Remove = 1;
}

message ServiceConfig {
	string Version = 1;
	ServiceConfigAction Action = 2;
	repeated ServiceConfigEndpoint List = 3;
}

enum ResourceType {
	ResourceNone = 0;
	ResourceURL = 1;
	ResourceSPACode = 2;
	ResourceAuth = 4;
	ResourceQuery = 5;
}

message Resource {
	string Name = 1;
	string Parent = 2;
	ResourceType Type = 3;
	ResourceType Consume = 4;
	bytes Configuration = 5;
	
	// Include list of other resources this bundle should include.
	repeated string Include = 6;
}

message LoginBundle {
	LoginState LoginState = 1;
	string Prefix = 2;
	bool ConsumeRedirect = 3;
	string Resource = 4;
}

message ApplicationBundle {
	// Associate a login state with a single bundle.
	repeated LoginBundle LoginBundle = 5;
	
	// Configured resource for the authenticator.
	string AuthConfiguredResource = 6;
	
	// Setup the host names to bind to.
	repeated string Host = 7;
}

message ServiceBundle {
	// Name is the base name for this service.
	// If something references  "solidcoredata.org/example-1/app" and the base
	// name is "solidcoredata.org/example-1", then the component name that is sent is "app".
	// "solidcoredata.org/example-1" or "solidcoredata.org/library-1".
	string Name = 1;
	
	// Resources with potential and configured resources.
	// Also define bundled resources together.
	repeated Resource Resource = 2;
	
	// Bundle Login bundles together with an auth configured resource and
	// host name list to define an application that can be served.
	repeated ApplicationBundle Application = 5;
}
